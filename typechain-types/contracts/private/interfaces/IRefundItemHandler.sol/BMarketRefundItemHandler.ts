/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface BMarketRefundItemHandlerInterface extends utils.Interface {
  functions: {};

  events: {
    "ItemNotRefunded(address,uint256,uint256)": EventFragment;
    "ItemRefunded(address,uint256,uint256,uint256,uint256)": EventFragment;
    "RefundItem(address,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ItemNotRefunded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ItemRefunded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RefundItem"): EventFragment;
}

export interface ItemNotRefundedEventObject {
  user: string;
  game: BigNumber;
  id: BigNumber;
}
export type ItemNotRefundedEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  ItemNotRefundedEventObject
>;

export type ItemNotRefundedEventFilter = TypedEventFilter<ItemNotRefundedEvent>;

export interface ItemRefundedEventObject {
  user: string;
  game: BigNumber;
  server: BigNumber;
  item: BigNumber;
  id: BigNumber;
}
export type ItemRefundedEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber],
  ItemRefundedEventObject
>;

export type ItemRefundedEventFilter = TypedEventFilter<ItemRefundedEvent>;

export interface RefundItemEventObject {
  user: string;
  game: BigNumber;
  server: BigNumber;
  item: BigNumber;
  id: BigNumber;
}
export type RefundItemEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber],
  RefundItemEventObject
>;

export type RefundItemEventFilter = TypedEventFilter<RefundItemEvent>;

export interface BMarketRefundItemHandler extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BMarketRefundItemHandlerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ItemNotRefunded(address,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemNotRefundedEventFilter;
    ItemNotRefunded(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemNotRefundedEventFilter;

    "ItemRefunded(address,uint256,uint256,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemRefundedEventFilter;
    ItemRefunded(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemRefundedEventFilter;

    "RefundItem(address,uint256,uint256,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): RefundItemEventFilter;
    RefundItem(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): RefundItemEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
