/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../common";

export interface BMarketGiveItemHandlerInterface extends utils.Interface {
  functions: {};

  events: {
    "GiveItem(address,uint256,uint256,uint256,uint256)": EventFragment;
    "ItemGiven(address,uint256,uint256,uint256,uint256)": EventFragment;
    "ItemNotGiven(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GiveItem"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ItemGiven"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ItemNotGiven"): EventFragment;
}

export interface GiveItemEventObject {
  user: string;
  game: BigNumber;
  server: BigNumber;
  item: BigNumber;
  id: BigNumber;
}
export type GiveItemEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber],
  GiveItemEventObject
>;

export type GiveItemEventFilter = TypedEventFilter<GiveItemEvent>;

export interface ItemGivenEventObject {
  user: string;
  game: BigNumber;
  server: BigNumber;
  item: BigNumber;
  id: BigNumber;
}
export type ItemGivenEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber, BigNumber],
  ItemGivenEventObject
>;

export type ItemGivenEventFilter = TypedEventFilter<ItemGivenEvent>;

export interface ItemNotGivenEventObject {
  user: string;
  game: BigNumber;
  id: BigNumber;
}
export type ItemNotGivenEvent = TypedEvent<
  [string, BigNumber, BigNumber],
  ItemNotGivenEventObject
>;

export type ItemNotGivenEventFilter = TypedEventFilter<ItemNotGivenEvent>;

export interface BMarketGiveItemHandler extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BMarketGiveItemHandlerInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "GiveItem(address,uint256,uint256,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): GiveItemEventFilter;
    GiveItem(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): GiveItemEventFilter;

    "ItemGiven(address,uint256,uint256,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemGivenEventFilter;
    ItemGiven(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      server?: null,
      item?: null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemGivenEventFilter;

    "ItemNotGiven(address,uint256,uint256)"(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemNotGivenEventFilter;
    ItemNotGiven(
      user?: PromiseOrValue<string> | null,
      game?: PromiseOrValue<BigNumberish> | null,
      id?: PromiseOrValue<BigNumberish> | null
    ): ItemNotGivenEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
