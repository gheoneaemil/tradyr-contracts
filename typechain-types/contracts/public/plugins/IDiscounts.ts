/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface IDiscountsInterface extends utils.Interface {
  functions: {
    "addDiscount(uint8,address,uint8,uint256[])": FunctionFragment;
    "calculateDiscount(address)": FunctionFragment;
    "editDiscount(uint256,address,uint8,uint256[],uint8)": FunctionFragment;
    "getDiscountTokenId(uint256,uint256)": FunctionFragment;
    "getDiscountTokenIds(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addDiscount"
      | "calculateDiscount"
      | "editDiscount"
      | "getDiscountTokenId"
      | "getDiscountTokenIds"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addDiscount",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "calculateDiscount",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "editDiscount",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getDiscountTokenId",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getDiscountTokenIds",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addDiscount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "calculateDiscount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDiscount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDiscountTokenId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDiscountTokenIds",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IDiscounts extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IDiscountsInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addDiscount(
      _tokenType: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    calculateDiscount(
      requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    editDiscount(
      _discountId: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _tokenType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getDiscountTokenId(
      _discountId: PromiseOrValue<BigNumberish>,
      tokenIdIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDiscountTokenIds(
      _discountId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;
  };

  addDiscount(
    _tokenType: PromiseOrValue<BigNumberish>,
    _tokenContract: PromiseOrValue<string>,
    _discount: PromiseOrValue<BigNumberish>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  calculateDiscount(
    requester: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  editDiscount(
    _discountId: PromiseOrValue<BigNumberish>,
    _tokenContract: PromiseOrValue<string>,
    _discount: PromiseOrValue<BigNumberish>,
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _tokenType: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getDiscountTokenId(
    _discountId: PromiseOrValue<BigNumberish>,
    tokenIdIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getDiscountTokenIds(
    _discountId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  callStatic: {
    addDiscount(
      _tokenType: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    calculateDiscount(
      requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    editDiscount(
      _discountId: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _tokenType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getDiscountTokenId(
      _discountId: PromiseOrValue<BigNumberish>,
      tokenIdIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDiscountTokenIds(
      _discountId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;
  };

  filters: {};

  estimateGas: {
    addDiscount(
      _tokenType: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    calculateDiscount(
      requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    editDiscount(
      _discountId: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _tokenType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getDiscountTokenId(
      _discountId: PromiseOrValue<BigNumberish>,
      tokenIdIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDiscountTokenIds(
      _discountId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addDiscount(
      _tokenType: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    calculateDiscount(
      requester: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    editDiscount(
      _discountId: PromiseOrValue<BigNumberish>,
      _tokenContract: PromiseOrValue<string>,
      _discount: PromiseOrValue<BigNumberish>,
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _tokenType: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getDiscountTokenId(
      _discountId: PromiseOrValue<BigNumberish>,
      tokenIdIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDiscountTokenIds(
      _discountId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
