/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EERC721,
  EERC721Interface,
} from "../../../contracts/utility/EERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "string",
        name: "tokenUri",
        type: "string",
      },
    ],
    name: "awardItem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020016747616d654974656d60c01b8152506040518060400160405280600381526020016249544d60e81b81525081600090816200006091906200011d565b5060016200006f82826200011d565b505050620001e9565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a357607f821691505b602082108103620000c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011857600081815260208120601f850160051c81016020861015620000f35750805b601f850160051c820191505b818110156200011457828155600101620000ff565b5050505b505050565b81516001600160401b0381111562000139576200013962000078565b62000151816200014a84546200008e565b84620000ca565b602080601f831160018114620001895760008415620001705750858301515b600019600386901b1c1916600185901b17855562000114565b600085815260208120601f198616915b82811015620001ba5788860151825594840194600190910190840162000199565b5085821015620001d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61170d80620001f96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146101f4578063c87b56dd14610207578063cf3783431461021a578063e985e9c51461022d57600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063af640d0f146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046110d7565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b6040516101199190611144565b61014a610145366004611157565b61034d565b6040516001600160a01b039091168152602001610119565b61017561017036600461118c565b610374565b005b6101756101853660046111b6565b61048e565b6101756101983660046111b6565b6104bf565b61014a6101ab366004611157565b6104da565b6101c36101be3660046111f2565b61053a565b604051908152602001610119565b61012a6105c0565b6101756101e736600461120d565b6105cf565b6101c36105de565b6101756102023660046112d5565b6105ee565b61012a610215366004611157565b610626565b6101c3610228366004611351565b610736565b61010d61023b3660046113b3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061029a57506001600160e01b03198216635b5e139f60e01b145b806102b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102ca906113e6565b80601f01602080910402602001604051908101604052809291908181526020018280546102f6906113e6565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b60006103588261076e565b506000908152600460205260409020546001600160a01b031690565b600061037f826104da565b9050806001600160a01b0316836001600160a01b0316036103f15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061040d575061040d813361023b565b61047f5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103e8565b61048983836107d0565b505050565b610498338261083e565b6104b45760405162461bcd60e51b81526004016103e890611420565b6104898383836108bc565b610489838383604051806020016040528060008152506105ee565b6000818152600260205260408120546001600160a01b0316806102b55760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103e8565b60006001600160a01b0382166105a45760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103e8565b506001600160a01b031660009081526003602052604090205490565b6060600180546102ca906113e6565b6105da338383610a2d565b5050565b60006105e960075490565b905090565b6105f8338361083e565b6106145760405162461bcd60e51b81526004016103e890611420565b61062084848484610afb565b50505050565b60606106318261076e565b6000828152600660205260408120805461064a906113e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610676906113e6565b80156106c35780601f10610698576101008083540402835291602001916106c3565b820191906000526020600020905b8154815290600101906020018083116106a657829003601f168201915b5050505050905060006106e160408051602081019091526000815290565b905080516000036106f3575092915050565b81511561072557808260405160200161070d92919061146d565b60405160208183030381529060405292505050919050565b61072e84610b2e565b949350505050565b6000610746600780546001019055565b600061075160075490565b905061075d8482610ba1565b6107678184610d3a565b9392505050565b6000818152600260205260409020546001600160a01b03166107cd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103e8565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610805826104da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061084a836104da565b9050806001600160a01b0316846001600160a01b0316148061089157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061072e5750836001600160a01b03166108aa8461034d565b6001600160a01b031614949350505050565b826001600160a01b03166108cf826104da565b6001600160a01b0316146108f55760405162461bcd60e51b81526004016103e89061149c565b6001600160a01b0382166109575760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103e8565b6109648383836001610dcd565b826001600160a01b0316610977826104da565b6001600160a01b03161461099d5760405162461bcd60e51b81526004016103e89061149c565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610a8e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103e8565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b068484846108bc565b610b1284848484610e55565b6106205760405162461bcd60e51b81526004016103e8906114e1565b6060610b398261076e565b6000610b5060408051602081019091526000815290565b90506000815111610b705760405180602001604052806000815250610767565b80610b7a84610f56565b604051602001610b8b92919061146d565b6040516020818303038152906040529392505050565b6001600160a01b038216610bf75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103e8565b6000818152600260205260409020546001600160a01b031615610c5c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103e8565b610c6a600083836001610dcd565b6000818152600260205260409020546001600160a01b031615610ccf5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103e8565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b0316610db55760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103e8565b60008281526006602052604090206104898282611581565b6001811115610620576001600160a01b03841615610e13576001600160a01b03841660009081526003602052604081208054839290610e0d908490611657565b90915550505b6001600160a01b03831615610620576001600160a01b03831660009081526003602052604081208054839290610e4a90849061166a565b909155505050505050565b60006001600160a01b0384163b15610f4b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e9990339089908890889060040161167d565b6020604051808303816000875af1925050508015610ed4575060408051601f3d908101601f19168201909252610ed1918101906116ba565b60015b610f31573d808015610f02576040519150601f19603f3d011682016040523d82523d6000602084013e610f07565b606091505b508051600003610f295760405162461bcd60e51b81526004016103e8906114e1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061072e565b506001949350505050565b60606000610f6383610fe9565b600101905060008167ffffffffffffffff811115610f8357610f83611249565b6040519080825280601f01601f191660200182016040528015610fad576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fb757509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110285772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611054576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061107257662386f26fc10000830492506010015b6305f5e100831061108a576305f5e100830492506008015b612710831061109e57612710830492506004015b606483106110b0576064830492506002015b600a83106102b55760010192915050565b6001600160e01b0319811681146107cd57600080fd5b6000602082840312156110e957600080fd5b8135610767816110c1565b60005b8381101561110f5781810151838201526020016110f7565b50506000910152565b600081518084526111308160208601602086016110f4565b601f01601f19169290920160200192915050565b6020815260006107676020830184611118565b60006020828403121561116957600080fd5b5035919050565b80356001600160a01b038116811461118757600080fd5b919050565b6000806040838503121561119f57600080fd5b6111a883611170565b946020939093013593505050565b6000806000606084860312156111cb57600080fd5b6111d484611170565b92506111e260208501611170565b9150604084013590509250925092565b60006020828403121561120457600080fd5b61076782611170565b6000806040838503121561122057600080fd5b61122983611170565b91506020830135801515811461123e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561127a5761127a611249565b604051601f8501601f19908116603f011681019082821181831017156112a2576112a2611249565b816040528093508581528686860111156112bb57600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156112eb57600080fd5b6112f485611170565b935061130260208601611170565b925060408501359150606085013567ffffffffffffffff81111561132557600080fd5b8501601f8101871361133657600080fd5b6113458782356020840161125f565b91505092959194509250565b6000806040838503121561136457600080fd5b61136d83611170565b9150602083013567ffffffffffffffff81111561138957600080fd5b8301601f8101851361139a57600080fd5b6113a98582356020840161125f565b9150509250929050565b600080604083850312156113c657600080fd5b6113cf83611170565b91506113dd60208401611170565b90509250929050565b600181811c908216806113fa57607f821691505b60208210810361141a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161147f8184602088016110f4565b8351908301906114938183602088016110f4565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b601f82111561048957600081815260208120601f850160051c8101602086101561155a5750805b601f850160051c820191505b8181101561157957828155600101611566565b505050505050565b815167ffffffffffffffff81111561159b5761159b611249565b6115af816115a984546113e6565b84611533565b602080601f8311600181146115e457600084156115cc5750858301515b600019600386901b1c1916600185901b178555611579565b600085815260208120601f198616915b82811015611613578886015182559484019460019091019084016115f4565b50858210156116315787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b818103818111156102b5576102b5611641565b808201808211156102b5576102b5611641565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116b090830184611118565b9695505050505050565b6000602082840312156116cc57600080fd5b8151610767816110c156fea26469706673582212203659318cf1a9c69e463e705a9016bab08e39e51f0d498d4d0860253bb221f08964736f6c63430008110033";

type EERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EERC721__factory extends ContractFactory {
  constructor(...args: EERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EERC721> {
    return super.deploy(overrides || {}) as Promise<EERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EERC721 {
    return super.attach(address) as EERC721;
  }
  override connect(signer: Signer): EERC721__factory {
    return super.connect(signer) as EERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EERC721Interface {
    return new utils.Interface(_abi) as EERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EERC721 {
    return new Contract(address, _abi, signerOrProvider) as EERC721;
  }
}
