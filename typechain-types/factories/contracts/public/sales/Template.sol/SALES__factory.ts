/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SALES,
  SALESInterface,
} from "../../../../../contracts/public/sales/Template.sol/SALES";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum SALESPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct SALESPARAMS.Sale",
        name: "sale",
        type: "tuple",
      },
    ],
    name: "Cancellation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "enum Payable.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "NewPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum SALESPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct SALESPARAMS.Sale",
        name: "sale",
        type: "tuple",
      },
    ],
    name: "NewSale",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum SALESPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct SALESPARAMS.Sale",
        name: "sale",
        type: "tuple",
      },
    ],
    name: "Purchase",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "nftAddressArray",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "nftTokenIdArray",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "nftTokenTypeArray",
        type: "uint32[]",
      },
    ],
    name: "checkItemsApproval",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "checkTokensApproval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "discounts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum SALESPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SALESPARAMS.Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "methods",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "operationDiscountCosts",
    outputs: [
      {
        internalType: "uint256",
        name: "discount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operationFeeDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bmarketFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalToPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payable.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "enum SALESPARAMS.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_nftAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_nftIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_nftAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "_nftTypes",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "sell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_discounts",
        type: "address",
      },
      {
        internalType: "address",
        name: "_methods",
        type: "address",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "nftAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "nftAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "nftTypes",
        type: "uint32[]",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052601460035534801561001557600080fd5b50600160005561002433610029565b61007b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f928061008a6000396000f3fe6080604052600436106101355760003560e01c8063af640d0f116100ab578063c01f59c21161006f578063c01f59c214610411578063d96a094a14610424578063ddca3f4314610432578063f23a6e6114610448578063f2fde38b14610474578063f376d7981461049457600080fd5b8063af640d0f14610315578063b5f522f714610339578063bb9a581a146103a5578063bc197c81146103c5578063bdd3dc8e146103f157600080fd5b8063715018a6116100fd578063715018a61461025557806375af65d11461026a5780638da5cb5b1461028a5780639507d39a146102a8578063a0e3eac9146102d5578063a125ea04146102f557600080fd5b806301ffc9a71461013a578063150b7a021461016f57806329907a91146101b357806340283e2a146101eb57806340e58ee514610233575b600080fd5b34801561014657600080fd5b5061015a610155366004611396565b6104b4565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b5061019a61018a36600461149c565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610166565b3480156101bf57600080fd5b506005546101d3906001600160a01b031681565b6040516001600160a01b039091168152602001610166565b3480156101f757600080fd5b5061020b610206366004611508565b6104eb565b604080519586526020860194909452928401919091526060830152608082015260a001610166565b34801561023f57600080fd5b5061025361024e366004611534565b6105da565b005b34801561026157600080fd5b5061025361065e565b34801561027657600080fd5b506004546101d3906001600160a01b031681565b34801561029657600080fd5b506001546001600160a01b03166101d3565b3480156102b457600080fd5b506102c86102c3366004611534565b610672565b6040516101669190611621565b3480156102e157600080fd5b506102536102f036600461177b565b6108e9565b34801561030157600080fd5b506102536103103660046119b9565b610964565b34801561032157600080fd5b5061032b60025481565b604051908152602001610166565b34801561034557600080fd5b50610394610354366004611534565b600660205260009081526040902080546001820154600283015460078401546009909401546001600160a01b039384169492841693909116919060ff1685565b604051610166959493929190611a48565b3480156103b157600080fd5b506102536103c0366004611a86565b610b08565b3480156103d157600080fd5b5061019a6103e0366004611b53565b63bc197c8160e01b95945050505050565b3480156103fd57600080fd5b5061032b61040c366004611c01565b610d12565b61025361041f366004611c3a565b610d8d565b61025361024e366004611534565b34801561043e57600080fd5b5061032b60035481565b34801561045457600080fd5b5061019a610463366004611ced565b63f23a6e6160e01b95945050505050565b34801561048057600080fd5b5061025361048f366004611d56565b61111f565b3480156104a057600080fd5b506102536104af366004611d73565b61119a565b60006001600160e01b03198216630271189760e51b14806104e557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6004805460405163ad6a874560e01b81526001600160a01b03858116938201939093526000928392839283928392169063ad6a874590602401602060405180830381865afa158015610541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105659190611db5565b60035460008881526006602052604090206007015491965061058691611de4565b93508460011461059f5761059a8585611de4565b6105a2565b60005b92506105ae8385611e06565b6000878152600660205260409020600701549092506105ce908490611e06565b90509295509295909350565b6105e2611213565b6005546040516000916001600160a01b0316906106029083903690611e19565b600060405180830381855af49150503d806000811461063d576040519150601f19603f3d011682016040523d82523d6000602084013e610642565b606091505b505090508061065057600080fd5b5061065b6001600055565b50565b61066661126c565b61067060006112c6565b565b61067a611318565b60008281526006602090815260409182902082516101408101845281546001600160a01b039081168252600183015481168285015260028301541681850152600382018054855181860281018601909652808652919492936060860193929083018282801561071257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116106f4575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561076a57602002820191906000526020600020905b815481526020019060010190808311610756575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156107c257602002820191906000526020600020905b8154815260200190600101908083116107ae575b505050505081526020016006820180548060200260200160405190810160405280929190818152602001828054801561081a57602002820191906000526020600020905b815481526020019060010190808311610806575b5050505050815260200160078201548152602001600882018054806020026020016040519081016040528092919081815260200182805480156108a857602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161086b5790505b5050509183525050600982015460209091019060ff1660028111156108cf576108cf6115f7565b60028111156108e0576108e06115f7565b90525092915050565b6005546040516000916001600160a01b0316906109099083903690611e19565b600060405180830381855af49150503d8060008114610944576040519150601f19603f3d011682016040523d82523d6000602084013e610949565b606091505b505090508061095757600080fd5b5050505050505050505050565b60005b8351811015610b015781818151811061098257610982611e29565b602002602001015163ffffffff16600003610a5a57306001600160a01b03168482815181106109b3576109b3611e29565b60200260200101516001600160a01b031663081812fc8584815181106109db576109db611e29565b60200260200101516040518263ffffffff1660e01b8152600401610a0191815260200190565b602060405180830381865afa158015610a1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a429190611e3f565b6001600160a01b031614610a5557600080fd5b610af1565b838181518110610a6c57610a6c611e29565b602090810291909101015160405163e985e9c560e01b81526001600160a01b0387811660048301523060248301529091169063e985e9c590604401602060405180830381865afa158015610ac4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae89190611e5c565b610af157600080fd5b610afa81611e7e565b9050610967565b5050505050565b8351835181148015610b1a5750808251145b610b2357600080fd5b60005b81811015610d0857828181518110610b4057610b40611e29565b602002602001015163ffffffff16600003610c0857858181518110610b6757610b67611e29565b60200260200101516001600160a01b03166342842e0e8989888581518110610b9157610b91611e29565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610beb57600080fd5b505af1158015610bff573d6000803e3d6000fd5b50505050610cf8565b858181518110610c1a57610c1a611e29565b60200260200101516001600160a01b031663f242432a8989888581518110610c4457610c44611e29565b6020026020010151888681518110610c5e57610c5e611e29565b60200260200101516040518563ffffffff1660e01b8152600401610cc594939291906001600160a01b0394851681529290931660208301526040820152606081019190915260a060808201819052600490820152630307830360e41b60c082015260e00190565b600060405180830381600087803b158015610cdf57600080fd5b505af1158015610cf3573d6000803e3d6000fd5b505050505b610d0181611e7e565b9050610b26565b5050505050505050565b604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301526000919083169063dd62ed3e90604401602060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d869190611db5565b9392505050565b610d95611213565b610d9d61126c565b6000816003811115610db157610db16115f7565b03610e5257836001600160a01b03166342842e0e878786600081518110610dda57610dda611e29565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b600060405180830381600087803b158015610e3557600080fd5b505af1158015610e49573d6000803e3d6000fd5b505050506110cc565b6001816003811115610e6657610e666115f7565b03610e9d57604051631759616b60e11b81526001600160a01b03851690632eb2c2d690610e1b908990899088908890600401611e97565b6002816003811115610eb157610eb16115f7565b03610fd8576001600160a01b0386163014610f7c57836001600160a01b03166323b872dd878785600081518110610eea57610eea611e29565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af1158015610f4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6e9190611e5c565b610f7757600080fd5b6110cc565b836001600160a01b031663a9059cbb8684600081518110610f9f57610f9f611e29565b60200260200101516040518363ffffffff1660e01b8152600401610f2b9291906001600160a01b03929092168252602082015260400190565b6003816003811115610fec57610fec6115f7565b036110cc576001600160a01b0385163b15611081576000856001600160a01b03168360008151811061102057611020611e29565b602002602001015160405160006040518083038185875af1925050503d8060008114611068576040519150601f19603f3d011682016040523d82523d6000602084013e61106d565b606091505b505090508061107b57600080fd5b506110cc565b846001600160a01b03166108fc836000815181106110a1576110a1611e29565b60200260200101519081150290604051600060405180830381858888f193505050506110cc57600080fd5b7f4f74c37cf0470b045087a8c6291e730e0623175419cdc46c332bb8a15f8de99e86868686868660405161110596959493929190611ef2565b60405180910390a16111176001600055565b505050505050565b61112761126c565b6001600160a01b0381166111915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61065b816112c6565b6111a261126c565b6000816001600160a01b03166000366040516111bf929190611e19565b600060405180830381855af49150503d80600081146111fa576040519150601f19603f3d011682016040523d82523d6000602084013e6111ff565b606091505b505090508061120d57600080fd5b50505050565b6002600054036112655760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611188565b6002600055565b6001546001600160a01b031633146106705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611188565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60405180610140016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016060815260200160608152602001600081526020016060815260200160006002811115611391576113916115f7565b905290565b6000602082840312156113a857600080fd5b81356001600160e01b031981168114610d8657600080fd5b6001600160a01b038116811461065b57600080fd5b80356113e0816113c0565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611424576114246113e5565b604052919050565b600082601f83011261143d57600080fd5b813567ffffffffffffffff811115611457576114576113e5565b61146a601f8201601f19166020016113fb565b81815284602083860101111561147f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156114b257600080fd5b84356114bd816113c0565b935060208501356114cd816113c0565b925060408501359150606085013567ffffffffffffffff8111156114f057600080fd5b6114fc8782880161142c565b91505092959194509250565b6000806040838503121561151b57600080fd5b8235611526816113c0565b946020939093013593505050565b60006020828403121561154657600080fd5b5035919050565b600081518084526020808501945080840160005b838110156115865781516001600160a01b031687529582019590820190600101611561565b509495945050505050565b600081518084526020808501945080840160005b83811015611586578151875295820195908201906001016115a5565b600081518084526020808501945080840160005b8381101561158657815163ffffffff16875295820195908201906001016115d5565b634e487b7160e01b600052602160045260246000fd5b6003811061161d5761161d6115f7565b9052565b6020815261163b6020820183516001600160a01b03169052565b6000602083015161165760408401826001600160a01b03169052565b5060408301516001600160a01b038116606084015250606083015161014080608085015261168961016085018361154d565b91506080850151601f19808685030160a08701526116a78483611591565b935060a08701519150808685030160c08701526116c48483611591565b935060c08701519150808685030160e08701526116e18483611591565b935060e0870151915061010082818801528088015192505061012081878603018188015261170f85846115c1565b945080880151925050506117258286018261160d565b5090949350505050565b60008083601f84011261174157600080fd5b50813567ffffffffffffffff81111561175957600080fd5b6020830191508360208260051b850101111561177457600080fd5b9250929050565b60008060008060008060008060008060c08b8d03121561179a57600080fd5b8a3567ffffffffffffffff808211156117b257600080fd5b6117be8e838f0161172f565b909c509a5060208d01359150808211156117d757600080fd5b6117e38e838f0161172f565b909a50985060408d01359150808211156117fc57600080fd5b6118088e838f0161172f565b909850965060608d013591508082111561182157600080fd5b5061182e8d828e0161172f565b90955093505060808b0135915061184760a08c016113d5565b90509295989b9194979a5092959850565b600067ffffffffffffffff821115611872576118726113e5565b5060051b60200190565b600082601f83011261188d57600080fd5b813560206118a261189d83611858565b6113fb565b82815260059290921b840181019181810190868411156118c157600080fd5b8286015b848110156118e55780356118d8816113c0565b83529183019183016118c5565b509695505050505050565b600082601f83011261190157600080fd5b8135602061191161189d83611858565b82815260059290921b8401810191818101908684111561193057600080fd5b8286015b848110156118e55780358352918301918301611934565b600082601f83011261195c57600080fd5b8135602061196c61189d83611858565b82815260059290921b8401810191818101908684111561198b57600080fd5b8286015b848110156118e557803563ffffffff811681146119ac5760008081fd5b835291830191830161198f565b600080600080608085870312156119cf57600080fd5b84356119da816113c0565b9350602085013567ffffffffffffffff808211156119f757600080fd5b611a038883890161187c565b94506040870135915080821115611a1957600080fd5b611a25888389016118f0565b93506060870135915080821115611a3b57600080fd5b506114fc8782880161194b565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a08101611a7c608083018461160d565b9695505050505050565b60008060008060008060c08789031215611a9f57600080fd5b611aa8876113d5565b9550611ab6602088016113d5565b9450604087013567ffffffffffffffff80821115611ad357600080fd5b611adf8a838b0161187c565b95506060890135915080821115611af557600080fd5b611b018a838b016118f0565b94506080890135915080821115611b1757600080fd5b611b238a838b016118f0565b935060a0890135915080821115611b3957600080fd5b50611b4689828a0161194b565b9150509295509295509295565b600080600080600060a08688031215611b6b57600080fd5b8535611b76816113c0565b94506020860135611b86816113c0565b9350604086013567ffffffffffffffff80821115611ba357600080fd5b611baf89838a016118f0565b94506060880135915080821115611bc557600080fd5b611bd189838a016118f0565b93506080880135915080821115611be757600080fd5b50611bf48882890161142c565b9150509295509295909350565b60008060408385031215611c1457600080fd5b8235611c1f816113c0565b91506020830135611c2f816113c0565b809150509250929050565b60008060008060008060c08789031215611c5357600080fd5b8635611c5e816113c0565b95506020870135611c6e816113c0565b94506040870135611c7e816113c0565b9350606087013567ffffffffffffffff80821115611c9b57600080fd5b611ca78a838b016118f0565b94506080890135915080821115611cbd57600080fd5b50611cca89828a016118f0565b92505060a087013560048110611cdf57600080fd5b809150509295509295509295565b600080600080600060a08688031215611d0557600080fd5b8535611d10816113c0565b94506020860135611d20816113c0565b93506040860135925060608601359150608086013567ffffffffffffffff811115611d4a57600080fd5b611bf48882890161142c565b600060208284031215611d6857600080fd5b8135610d86816113c0565b600080600060608486031215611d8857600080fd5b833592506020840135611d9a816113c0565b91506040840135611daa816113c0565b809150509250925092565b600060208284031215611dc757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082611e0157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104e5576104e5611dce565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611e5157600080fd5b8151610d86816113c0565b600060208284031215611e6e57600080fd5b81518015158114610d8657600080fd5b600060018201611e9057611e90611dce565b5060010190565b6001600160a01b0385811682528416602082015260a060408201819052600090611ec390830185611591565b8281036060840152611ed58185611591565b838103608090940193909352505060008152602001949350505050565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611f2690830186611591565b8281036080840152611f388186611591565b91505060048310611f4b57611f4b6115f7565b8260a083015297965050505050505056fea264697066735822122062fe95b41e2095a158bccb5c89d37b010034817eb7dae2be6a94e0f8a151e69664736f6c63430008110033";

type SALESConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SALESConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SALES__factory extends ContractFactory {
  constructor(...args: SALESConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SALES> {
    return super.deploy(overrides || {}) as Promise<SALES>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SALES {
    return super.attach(address) as SALES;
  }
  override connect(signer: Signer): SALES__factory {
    return super.connect(signer) as SALES__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SALESInterface {
    return new utils.Interface(_abi) as SALESInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SALES {
    return new Contract(address, _abi, signerOrProvider) as SALES;
  }
}
