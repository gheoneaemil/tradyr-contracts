/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  AUCTIONS,
  AUCTIONSInterface,
} from "../../../../../contracts/public/auctions/Template.sol/AUCTIONS";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum AUCTIONSPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AUCTIONSPARAMS.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "Bid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum AUCTIONSPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AUCTIONSPARAMS.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "Cancellation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum AUCTIONSPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AUCTIONSPARAMS.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "Finished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum AUCTIONSPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct AUCTIONSPARAMS.Auction",
        name: "auction",
        type: "tuple",
      },
    ],
    name: "NewAuction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "enum Payable.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "NewPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBid",
        type: "uint256",
      },
      {
        internalType: "enum AUCTIONSPARAMS.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "bid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "nftAddressArray",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "nftTokenIdArray",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "nftTokenTypeArray",
        type: "uint32[]",
      },
    ],
    name: "checkItemsApproval",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
    ],
    name: "checkTokensApproval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_nftAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_nftIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_nftAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "_nftTypes",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_currency",
        type: "address",
      },
    ],
    name: "create",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "discounts",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "finish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "nftAddresses",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "nftAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentBid",
            type: "uint256",
          },
          {
            internalType: "uint32[]",
            name: "nftTypes",
            type: "uint32[]",
          },
          {
            internalType: "enum AUCTIONSPARAMS.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct AUCTIONSPARAMS.Auction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "methods",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "operationDiscountCosts",
    outputs: [
      {
        internalType: "uint256",
        name: "discount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operationFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operationFeeDiscount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bmarketFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalToPay",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "enum Payable.PaymentTypes",
        name: "paymentType",
        type: "uint8",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_discounts",
        type: "address",
      },
      {
        internalType: "address",
        name: "_methods",
        type: "address",
      },
    ],
    name: "setParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "nftAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "nftIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "nftAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint32[]",
        name: "nftTypes",
        type: "uint32[]",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052601460035534801561001557600080fd5b50600160005561002433610029565b61007b565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f9f8061008a6000396000f3fe6080604052600436106101405760003560e01c80639507d39a116100b6578063c01f59c21161006f578063c01f59c21461043c578063d353a1cb14610260578063ddca3f431461044f578063f23a6e6114610465578063f2fde38b14610491578063f376d798146104b157600080fd5b80639507d39a1461035f578063a125ea041461038c578063af640d0f146103ac578063bb9a581a146103d0578063bc197c81146103f0578063bdd3dc8e1461041c57600080fd5b806340e58ee51161010857806340e58ee514610260578063454a2ab314610280578063571a26a01461028e578063715018a61461030c57806375af65d1146103215780638da5cb5b1461034157600080fd5b806301ffc9a7146101455780630e2f7da51461017a578063150b7a021461019c57806329907a91146101e057806340283e2a14610218575b600080fd5b34801561015157600080fd5b50610165610160366004611379565b6104d1565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061019a610195366004611414565b610508565b005b3480156101a857600080fd5b506101c76101b73660046115b4565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610171565b3480156101ec57600080fd5b50600554610200906001600160a01b031681565b6040516001600160a01b039091168152602001610171565b34801561022457600080fd5b50610238610233366004611620565b610584565b604080519586526020860194909452928401919091526060830152608082015260a001610171565b34801561026c57600080fd5b5061019a61027b36600461164c565b610675565b61019a61027b36600461164c565b34801561029a57600080fd5b506102f96102a936600461164c565b60066020819052600091825260409091208054600182015460028301549383015460078401546008850154600a909501546001600160a01b03948516969385169593909416939192909160ff1687565b60405161017197969594939291906116a6565b34801561031857600080fd5b5061019a6106f9565b34801561032d57600080fd5b50600454610200906001600160a01b031681565b34801561034d57600080fd5b506001546001600160a01b0316610200565b34801561036b57600080fd5b5061037f61037a36600461164c565b61070d565b60405161017191906117a0565b34801561039857600080fd5b5061019a6103a7366004611a0b565b610940565b3480156103b857600080fd5b506103c260025481565b604051908152602001610171565b3480156103dc57600080fd5b5061019a6103eb366004611a9a565b610ae4565b3480156103fc57600080fd5b506101c761040b366004611b67565b63bc197c8160e01b95945050505050565b34801561042857600080fd5b506103c2610437366004611c15565b610cee565b61019a61044a366004611c4e565b610d69565b34801561045b57600080fd5b506103c260035481565b34801561047157600080fd5b506101c7610480366004611d01565b63f23a6e6160e01b95945050505050565b34801561049d57600080fd5b5061019a6104ac366004611d6a565b6110fb565b3480156104bd57600080fd5b5061019a6104cc366004611d87565b611176565b60006001600160e01b03198216630271189760e51b148061050257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6005546040516000916001600160a01b0316906105289083903690611dc9565b600060405180830381855af49150503d8060008114610563576040519150601f19603f3d011682016040523d82523d6000602084013e610568565b606091505b505090508061057657600080fd5b505050505050505050505050565b6004805460405163ad6a874560e01b81526001600160a01b03858116938201939093526000928392839283928392169063ad6a874590602401602060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe9190611dd9565b6003546000888152600660208190526040909120015491965061062091611e08565b935084600114610639576106348585611e08565b61063c565b60005b92506106488385611e2a565b60008781526006602081905260409091200154909250610669908490611e2a565b90509295509295909350565b61067d6111ef565b6005546040516000916001600160a01b03169061069d9083903690611dc9565b600060405180830381855af49150503d80600081146106d8576040519150601f19603f3d011682016040523d82523d6000602084013e6106dd565b606091505b50509050806106eb57600080fd5b506106f66001600055565b50565b610701611248565b61070b60006112a2565b565b6107156112f4565b60008281526006602090815260409182902082516101608101845281546001600160a01b03908116825260018301548116828501526002830154168185015260038201805485518186028101860190965280865291949293606086019392908301828280156107ad57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161078f575b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561080557602002820191906000526020600020905b8154815260200190600101908083116107f1575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561085d57602002820191906000526020600020905b815481526020019060010190808311610849575b50505050508152602001600682015481526020016007820154815260200160088201548152602001600982018054806020026020016040519081016040528092919081815260200182805480156108ff57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff16815260200190600401906020826003010492830192600103820291508084116108c25790505b5050509183525050600a82015460209091019060ff16600381111561092657610926611665565b600381111561093757610937611665565b90525092915050565b60005b8351811015610add5781818151811061095e5761095e611e3d565b602002602001015163ffffffff16600003610a3657306001600160a01b031684828151811061098f5761098f611e3d565b60200260200101516001600160a01b031663081812fc8584815181106109b7576109b7611e3d565b60200260200101516040518263ffffffff1660e01b81526004016109dd91815260200190565b602060405180830381865afa1580156109fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1e9190611e53565b6001600160a01b031614610a3157600080fd5b610acd565b838181518110610a4857610a48611e3d565b602090810291909101015160405163e985e9c560e01b81526001600160a01b0387811660048301523060248301529091169063e985e9c590604401602060405180830381865afa158015610aa0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac49190611e70565b610acd57600080fd5b610ad681611e92565b9050610943565b5050505050565b8351835181148015610af65750808251145b610aff57600080fd5b60005b81811015610ce457828181518110610b1c57610b1c611e3d565b602002602001015163ffffffff16600003610be457858181518110610b4357610b43611e3d565b60200260200101516001600160a01b03166342842e0e8989888581518110610b6d57610b6d611e3d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610bc757600080fd5b505af1158015610bdb573d6000803e3d6000fd5b50505050610cd4565b858181518110610bf657610bf6611e3d565b60200260200101516001600160a01b031663f242432a8989888581518110610c2057610c20611e3d565b6020026020010151888681518110610c3a57610c3a611e3d565b60200260200101516040518563ffffffff1660e01b8152600401610ca194939291906001600160a01b0394851681529290931660208301526040820152606081019190915260a060808201819052600490820152630307830360e41b60c082015260e00190565b600060405180830381600087803b158015610cbb57600080fd5b505af1158015610ccf573d6000803e3d6000fd5b505050505b610cdd81611e92565b9050610b02565b5050505050505050565b604051636eb1769f60e11b81526001600160a01b0383811660048301523060248301526000919083169063dd62ed3e90604401602060405180830381865afa158015610d3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d629190611dd9565b9392505050565b610d716111ef565b610d79611248565b6000816003811115610d8d57610d8d611665565b03610e2e57836001600160a01b03166342842e0e878786600081518110610db657610db6611e3d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b600060405180830381600087803b158015610e1157600080fd5b505af1158015610e25573d6000803e3d6000fd5b505050506110a8565b6001816003811115610e4257610e42611665565b03610e7957604051631759616b60e11b81526001600160a01b03851690632eb2c2d690610df7908990899088908890600401611eab565b6002816003811115610e8d57610e8d611665565b03610fb4576001600160a01b0386163014610f5857836001600160a01b03166323b872dd878785600081518110610ec657610ec6611e3d565b60209081029190910101516040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064015b6020604051808303816000875af1158015610f26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a9190611e70565b610f5357600080fd5b6110a8565b836001600160a01b031663a9059cbb8684600081518110610f7b57610f7b611e3d565b60200260200101516040518363ffffffff1660e01b8152600401610f079291906001600160a01b03929092168252602082015260400190565b6003816003811115610fc857610fc8611665565b036110a8576001600160a01b0385163b1561105d576000856001600160a01b031683600081518110610ffc57610ffc611e3d565b602002602001015160405160006040518083038185875af1925050503d8060008114611044576040519150601f19603f3d011682016040523d82523d6000602084013e611049565b606091505b505090508061105757600080fd5b506110a8565b846001600160a01b03166108fc8360008151811061107d5761107d611e3d565b60200260200101519081150290604051600060405180830381858888f193505050506110a857600080fd5b7f4f74c37cf0470b045087a8c6291e730e0623175419cdc46c332bb8a15f8de99e8686868686866040516110e196959493929190611f06565b60405180910390a16110f36001600055565b505050505050565b611103611248565b6001600160a01b03811661116d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6106f6816112a2565b61117e611248565b6000816001600160a01b031660003660405161119b929190611dc9565b600060405180830381855af49150503d80600081146111d6576040519150601f19603f3d011682016040523d82523d6000602084013e6111db565b606091505b50509050806111e957600080fd5b50505050565b6002600054036112415760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401611164565b6002600055565b6001546001600160a01b0316331461070b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401611164565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60405180610160016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001606081526020016000600381111561137457611374611665565b905290565b60006020828403121561138b57600080fd5b81356001600160e01b031981168114610d6257600080fd5b60008083601f8401126113b557600080fd5b50813567ffffffffffffffff8111156113cd57600080fd5b6020830191508360208260051b85010111156113e857600080fd5b9250929050565b6001600160a01b03811681146106f657600080fd5b803561140f816113ef565b919050565b600080600080600080600080600080600060e08c8e03121561143557600080fd5b67ffffffffffffffff808d35111561144c57600080fd5b6114598e8e358f016113a3565b909c509a5060208d013581101561146f57600080fd5b61147f8e60208f01358f016113a3565b909a50985060408d013581101561149557600080fd5b6114a58e60408f01358f016113a3565b909850965060608d01358110156114bb57600080fd5b506114cc8d60608e01358e016113a3565b909550935060808c0135925060a08c013591506114eb60c08d01611404565b90509295989b509295989b9093969950565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561153c5761153c6114fd565b604052919050565b600082601f83011261155557600080fd5b813567ffffffffffffffff81111561156f5761156f6114fd565b611582601f8201601f1916602001611513565b81815284602083860101111561159757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156115ca57600080fd5b84356115d5816113ef565b935060208501356115e5816113ef565b925060408501359150606085013567ffffffffffffffff81111561160857600080fd5b61161487828801611544565b91505092959194509250565b6000806040838503121561163357600080fd5b823561163e816113ef565b946020939093013593505050565b60006020828403121561165e57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600481106106f657634e487b7160e01b600052602160045260246000fd5b6116a28161167b565b9052565b6001600160a01b038881168252878116602083015286166040820152606081018590526080810184905260a0810183905260e081016116e48361167b565b8260c083015298975050505050505050565b600081518084526020808501945080840160005b8381101561172f5781516001600160a01b03168752958201959082019060010161170a565b509495945050505050565b600081518084526020808501945080840160005b8381101561172f5781518752958201959082019060010161174e565b600081518084526020808501945080840160005b8381101561172f57815163ffffffff168752958201959082019060010161177e565b602081526117ba6020820183516001600160a01b03169052565b600060208301516117d660408401826001600160a01b03169052565b5060408301516001600160a01b03811660608401525060608301516101608060808501526118086101808501836116f6565b91506080850151601f19808685030160a0870152611826848361173a565b935060a08701519150808685030160c0870152611843848361173a565b935060c087015160e087015260e0870151915061010082818801528088015192505061012082818801528088015192505061014081878603018188015261188a858461176a565b945080880151925050506118a082860182611699565b5090949350505050565b600067ffffffffffffffff8211156118c4576118c46114fd565b5060051b60200190565b600082601f8301126118df57600080fd5b813560206118f46118ef836118aa565b611513565b82815260059290921b8401810191818101908684111561191357600080fd5b8286015b8481101561193757803561192a816113ef565b8352918301918301611917565b509695505050505050565b600082601f83011261195357600080fd5b813560206119636118ef836118aa565b82815260059290921b8401810191818101908684111561198257600080fd5b8286015b848110156119375780358352918301918301611986565b600082601f8301126119ae57600080fd5b813560206119be6118ef836118aa565b82815260059290921b840181019181810190868411156119dd57600080fd5b8286015b8481101561193757803563ffffffff811681146119fe5760008081fd5b83529183019183016119e1565b60008060008060808587031215611a2157600080fd5b8435611a2c816113ef565b9350602085013567ffffffffffffffff80821115611a4957600080fd5b611a55888389016118ce565b94506040870135915080821115611a6b57600080fd5b611a7788838901611942565b93506060870135915080821115611a8d57600080fd5b506116148782880161199d565b60008060008060008060c08789031215611ab357600080fd5b611abc87611404565b9550611aca60208801611404565b9450604087013567ffffffffffffffff80821115611ae757600080fd5b611af38a838b016118ce565b95506060890135915080821115611b0957600080fd5b611b158a838b01611942565b94506080890135915080821115611b2b57600080fd5b611b378a838b01611942565b935060a0890135915080821115611b4d57600080fd5b50611b5a89828a0161199d565b9150509295509295509295565b600080600080600060a08688031215611b7f57600080fd5b8535611b8a816113ef565b94506020860135611b9a816113ef565b9350604086013567ffffffffffffffff80821115611bb757600080fd5b611bc389838a01611942565b94506060880135915080821115611bd957600080fd5b611be589838a01611942565b93506080880135915080821115611bfb57600080fd5b50611c0888828901611544565b9150509295509295909350565b60008060408385031215611c2857600080fd5b8235611c33816113ef565b91506020830135611c43816113ef565b809150509250929050565b60008060008060008060c08789031215611c6757600080fd5b8635611c72816113ef565b95506020870135611c82816113ef565b94506040870135611c92816113ef565b9350606087013567ffffffffffffffff80821115611caf57600080fd5b611cbb8a838b01611942565b94506080890135915080821115611cd157600080fd5b50611cde89828a01611942565b92505060a087013560048110611cf357600080fd5b809150509295509295509295565b600080600080600060a08688031215611d1957600080fd5b8535611d24816113ef565b94506020860135611d34816113ef565b93506040860135925060608601359150608086013567ffffffffffffffff811115611d5e57600080fd5b611c0888828901611544565b600060208284031215611d7c57600080fd5b8135610d62816113ef565b600080600060608486031215611d9c57600080fd5b833592506020840135611dae816113ef565b91506040840135611dbe816113ef565b809150509250925092565b8183823760009101908152919050565b600060208284031215611deb57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082611e2557634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561050257610502611df2565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611e6557600080fd5b8151610d62816113ef565b600060208284031215611e8257600080fd5b81518015158114610d6257600080fd5b600060018201611ea457611ea4611df2565b5060010190565b6001600160a01b0385811682528416602082015260a060408201819052600090611ed79083018561173a565b8281036060840152611ee9818561173a565b838103608090940193909352505060008152602001949350505050565b6001600160a01b03878116825286811660208301528516604082015260c060608201819052600090611f3a9083018661173a565b8281036080840152611f4c818661173a565b915050611f588361167b565b8260a083015297965050505050505056fea2646970667358221220429121b96fbd2576e055776ba24d8f95741b73e05612bfaa668d3c576a86934364736f6c63430008110033";

type AUCTIONSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AUCTIONSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AUCTIONS__factory extends ContractFactory {
  constructor(...args: AUCTIONSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AUCTIONS> {
    return super.deploy(overrides || {}) as Promise<AUCTIONS>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AUCTIONS {
    return super.attach(address) as AUCTIONS;
  }
  override connect(signer: Signer): AUCTIONS__factory {
    return super.connect(signer) as AUCTIONS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AUCTIONSInterface {
    return new utils.Interface(_abi) as AUCTIONSInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AUCTIONS {
    return new Contract(address, _abi, signerOrProvider) as AUCTIONS;
  }
}
